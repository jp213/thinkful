SQL Exam

-- 1

SELECT *
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'naep';

-- 2

SELECT *
FROM naep
LIMIT 50;

-- 3

SELECT
	state,
	COUNT(avg_math_4_score) AS count,
	AVG(avg_math_4_score) AS mean,
	STDDEV_SAMP(avg_math_4_score) AS stdev,
	MIN(avg_math_4_score) AS min,
	PERCENTILE_DISC(.25) WITHIN GROUP (ORDER BY avg_math_4_score) percentile_25,
	PERCENTILE_DISC(.5) WITHIN GROUP (ORDER BY avg_math_4_score) percentile_50,
	PERCENTILE_DISC(.75) WITHIN GROUP (ORDER BY avg_math_4_score) percentile_75,
	MAX(avg_math_4_score) AS max
FROM naep
GROUP BY state
ORDER BY state;

-- 4

SELECT
	state,
	COUNT(avg_math_4_score) AS count,
	AVG(avg_math_4_score) AS mean,
	STDDEV_SAMP(avg_math_4_score) AS stdev,
	MIN(avg_math_4_score) AS min,
	PERCENTILE_DISC(.25) WITHIN GROUP (ORDER BY avg_math_4_score) percentile_25,
	PERCENTILE_DISC(.5) WITHIN GROUP (ORDER BY avg_math_4_score) percentile_50,
	PERCENTILE_DISC(.75) WITHIN GROUP (ORDER BY avg_math_4_score) percentile_75,
	MAX(avg_math_4_score) AS max
FROM naep 
GROUP BY state
HAVING MAX(avg_math_4_score) - MIN(avg_math_4_score) > 30
ORDER BY state;

-- 5

SELECT state, avg_math_4_score as bottom_10_states
FROM naep
WHERE year = 2000
ORDER BY bottom_10_states
LIMIT 10;

-- 6

SELECT ROUND(AVG(avg_math_4_score),2) as avg_all_y2k
FROM naep
GROUP BY year
HAVING year = 2000;

-- 7

SELECT state as below_average_states_y2000
FROM naep
WHERE year = 2000 AND avg_math_4_score < 
	(SELECT AVG(avg_math_4_score)
	FROM naep
	GROUP BY year
	HAVING year = 2000);

-- Replacing the SELECT statement above with this one would return their scores as well:
SELECT state as below_average_states_y2000, avg_math_4_score

-- 9

SELECT naep.state, ROUND(avg_math_4_score,2), total_expenditure
FROM naep LEFT OUTER JOIN finance
ON naep.id = finance.id
WHERE naep.year = 2000 AND avg_math_4_score IS NOT NULL
ORDER BY total_expenditure DESC;